
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// $custom-light-theme-background: (
//   status-bar: map_get($mat-grey, 300),
//   app-bar:    #16161a,
//   background: #16161a,
//   hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
//   card:       #242629,
//   dialog:     white,
//   disabled-button: rgba(black, 0.12),
//   raised-button: white,
//   focused-button: $dark-focused,
//   selected-button: map_get($mat-grey, 300),
//   selected-disabled-button: map_get($mat-grey, 400),
//   disabled-button-toggle: map_get($mat-grey, 200),
//   unselected-chip: map_get($mat-grey, 300),
//   disabled-list-option: map_get($mat-grey, 200),
//   tooltip: map_get($mat-grey, 700),
// );

// // Foreground palette for light themes.
// $custom-light-theme-foreground: (
//   base:              black,
//   divider:           $dark-dividers,
//   dividers:          $dark-dividers,
//   disabled:          $dark-disabled-text,
//   disabled-button:   rgba(black, 0.26),
//   disabled-text:     $dark-disabled-text,
//   elevation:         black,
//   hint-text:         $dark-disabled-text,
//   secondary-text:    $dark-secondary-text,
//   icon:              rgba(black, 0.54),
//   icons:             rgba(black, 0.54),
//   text:              #fffffe,
//   slider-min:        rgba(black, 0.87),
//   slider-off:        rgba(black, 0.26),
//   slider-off-active: rgba(black, 0.38),
// );

// @function custom-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
//     @return (
//       primary: $primary,
//       accent: $accent,
//       warn: $warn,
//       is-dark: false,
//       foreground: $custom-light-theme-foreground,
//       background: $custom-light-theme-background,
//     );
// }

$typing-test-primary: mat-palette($mat-indigo);
$typing-test-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$typing-test-warn: mat-palette($mat-red, A700);

// Create the theme object (a Sass map containing all of the palettes).
$typing-test-theme: mat-light-theme($typing-test-primary, $typing-test-accent, $typing-test-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($typing-test-theme);

$typing-test-dark-primary: mat-palette($mat-grey, 900);
$typing-test-dark-accent:  mat-palette($mat-blue, A700);
$typing-test-dark-warn:    mat-palette($mat-deep-orange);
$typing-test-dark-theme:   mat-dark-theme($typing-test-dark-primary, $typing-test-dark-accent, $typing-test-dark-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.typing-test-dark-theme {
  @include angular-material-theme($typing-test-dark-theme);
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
